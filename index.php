<?php

/**
 * MVC パターン サンプル
 *
 * フロントコントローラ
 *
 * POST値、GET値の制御と
 * 初期処理及び、後処理を行います
 *
 * 基本的にはこのファイルを修正することはありません。
 *
 */

////////////////////////////////////////////////////////////////////////////////
// 各種情報格納用変数
// この変数内に、すべての値を入れるようにします。
// 参照渡しにすることで、すべてのファイルから参照が可能なようにします。
////////////////////////////////////////////////////////////////////////////////
$gl_arr;


////////////////////////////////////////////////////////////////////////////////
// 実行サーバーのフルパスを取得します。
// これにより、OSの違いを吸収できます。
// windowsパスの "\" は "/" に置き換えます。
////////////////////////////////////////////////////////////////////////////////
define( "BASE_PATH", str_replace(
                        '\\'
                        , '/'
                        , dirname( __FILE__ )
                     ) . "/"
      );

////////////////////////////////////////////////////////////////////////////////
// 設定ファイルをインクルードします。
// DB接続情報等、重要な情報を保持する場合、設定ファイルに記述します。
// 記述内容は、すべてのファイルで参照できます
////////////////////////////////////////////////////////////////////////////////
include_once( BASE_PATH . "config.php" );
//print(BASE_PATH);

////////////////////////////////////////////////////////////////////////////////
// テキスト書き出しライブラリ インクルード
// 今回はこの中に、ログ書き出し関数を作って実行中の動作ログを書き出します
//
// みなさんが以前作成したものを使用できればGOOD
////////////////////////////////////////////////////////////////////////////////
include_once( BASE_PATH . "lib/txtwrite_lib.php" );


////////////////////////////////////////////////////////////////////////////////
// 処理を実行します。
// 
// この部分ではあくまでも、必要な値を $gl_arr に入れて、actionファイルへ
// 渡すだけになります。
// actionファイルの実行結果を受け、画面を表示します。
////////////////////////////////////////////////////////////////////////////////
try {

    // 実行アクションの保持
    $action = $_GET["action"];

    // 実行アクションファイルをインクルード
    include_once( BASE_PATH . "act/" . $action . ".php" );

    // POST値を格納
    $gl_arr["POST"] = $_POST;

    // GET値を格納
    $gl_arr["GET"]  = $_GET;


    // セッション使用の場合セッションスタート
    // セッションをスタートするかは、アクションファイルで定義
    if( SESSION_USE == "on" ) {

        // セッションスタート
        session_start();

        // SESSION値を格納
        $gl_arr["SESSION"] = $_SESSION;

    }

    // データベース使用の場合データベースコネクションオープン
    // データベースにコネクションするかは、アクションファイルで定義
    if( DB_USE == "on" ) {

        // データベース接続ライブラリ 読み込み
        include_once( BASE_PATH . "lib/db_lib.php" );

        // コネクション処理
        connect_db( $gl_arr );

    }

    //ログ
    //app_log( print_r( $gl_arr, true ) );


    // アクションファイルを実行
    exec_action( $gl_arr );

    //ログ
    //app_log( print_r( $gl_arr, true ) );

    // データベース使用の場合データベースコネクションクローズ
    // データベースにコネクションするかは、アクションファイルで定義
    if( DB_USE == "on" ) {

        close_db( $gl_arr );

    }

    // Viewファイルをインクルード
    include_once( BASE_PATH . "view/" . $gl_arr["NEXT_VIEW"] . ".php" );


} catch( Exception $e ) {

    //////////////////////////////////////////////////////////
    //
    // 今回はPDOを使用してのDB接続のため、このファイル上で
    // 例外キャッチ処理を行います。
    // そのため、DB接続ライブラリで try catch 文を書く必要は
    // ありません。
    //
    //////////////////////////////////////////////////////////

    die(
        "重大エラー発生。\n"
        . "アプリケーションを停止しました。\n\n"
        . $e->getMessage()
       );

}
